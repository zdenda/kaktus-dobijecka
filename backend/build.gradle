// App Engine Backend build file

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.google.cloud.tools:appengine-gradle-plugin:1.3.4'
    }
}

repositories {
    jcenter()
}

apply plugin: 'java'
apply plugin: 'war'

apply plugin: 'com.google.cloud.tools.appengine'
apply plugin: 'com.google.cloud.tools.endpoints-framework-server'

apply from: 'appengine-settings.gradle'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

dependencies {

    implementation 'com.google.endpoints:endpoints-framework:2.0.11'
    implementation 'javax.servlet:servlet-api:2.5'
    implementation 'com.googlecode.objectify:objectify:5.1.21'
    implementation 'org.jsoup:jsoup:1.11.2'
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'

}

war {
    filesMatching('WEB-INF/appengine-web.xml') {
        expand 'application': projectId, 'fcmKey': fcmServerKey, 'email': adminEmail
    }
}

appengine {
    run {
        host = '0.0.0.0'
        //TODO: this doesn't work, so the jvmFlag has to be used instead
        //datastorePath = "$rootDir/backend/local_db.bin"
        jvmFlags = ["-Ddatastore.backing_store=$rootDir/backend/local_db.bin".toString(),
                    "-Dappengine.fullscan.seconds=5".toString()]
    }
    deploy {
        project = projectId
        version = 22
        // keep the old version running, do the switch manually in administration
        stopPreviousVersion = false
        promote = false
    }
}

task reloadApp(type: Copy) {
    dependsOn war
    project.afterEvaluate {
        into project.tasks.explodeWar.explodedAppDirectory
        with war
    }
}
